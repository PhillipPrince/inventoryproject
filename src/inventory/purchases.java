/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package inventory;

import java.io.FileNotFoundException;
import java.math.BigDecimal;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author user
 */
public class purchases extends javax.swing.JDialog {

    String chosen,cquan,currentprice;
    int z=0;
    int y=0;
    String thsupplier=null;
    DBConnection db=new DBConnection();
    PreparedStatement stmt=null;
    /**
     * Creates new form purchases
     */
    public purchases(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
       // this.setAlwaysOnTop(false);
        jLabel8.setVisible(false);
        jButton2.setEnabled(false);
         jButton1.setEnabled(false);
         jButton5.setEnabled(false);
        // jButton2.setEnabled(false);
        check();
        this.setLocationRelativeTo(null);
        trunc();
        trunc2();
    try {
           
            String sql = "SELECT name FROM suppliers";
            stmt = db.prepareStatement(sql);
            ResultSet resultSet = stmt.executeQuery();
            while (resultSet.next()) {
               jComboBox1.addItem(resultSet.getString(1));
             }
        } catch (Exception exc) {  // process error
            System.out.println("process error" + exc);
                     //  JOptionPane.showMessageDialog(jPanel1,"Sorry, connection Failed!\nOpen Xampp And Set MySql Running","Error!",JOptionPane.ERROR_MESSAGE);
//System.exit(0);
        }}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        cod = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        quan = new javax.swing.JTextField();
        pri = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        selling = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        sub = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        itemnam = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        itemdes = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        pur = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        owed = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        amt = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jPanel2.setBackground(new java.awt.Color(153, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        jLabel3.setText("ITEM CODE:");

        cod.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codActionPerformed(evt);
            }
        });
        cod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                codKeyReleased(evt);
            }
        });

        jLabel4.setText("QUANTITY:");

        quan.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        pri.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pri.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                priKeyReleased(evt);
            }
        });

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/tick-1.png"))); // NOI18N

        jLabel5.setText("PURCHASING PRICE:");

        jLabel10.setText("SELLING PRICE: ");

        selling.setEditable(false);
        selling.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel13.setText("SUBTOTAL:");

        sub.setEditable(false);
        sub.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton5.setText("CALC");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        itemnam.setEditable(false);
        itemnam.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel15.setText("ITEM:");

        jLabel16.setText("DESCRIPTION:");

        itemdes.setEditable(false);
        itemdes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(sub)
                                    .addComponent(quan)
                                    .addComponent(itemdes)
                                    .addComponent(itemnam, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                                    .addComponent(cod))
                                .addGap(36, 36, 36)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jButton5)))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(pri, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                                .addComponent(selling, javax.swing.GroupLayout.Alignment.LEADING)))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(itemnam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(itemdes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(quan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(selling, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel13)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(sub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton5)))
                        .addGap(32, 32, 32))))
        );

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(204, 204, 204));
        jLabel6.setText("ENTER PURCHASE DETAILS");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 11, Short.MAX_VALUE)
                .addComponent(jLabel6))
        );

        jPanel4.setBackground(new java.awt.Color(153, 204, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        jLabel2.setText("INVOICE NO:");

        pur.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purActionPerformed(evt);
            }
        });
        pur.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                purKeyReleased(evt);
            }
        });

        jLabel1.setText("SUPPLIER:");

        jComboBox1.setEditable(true);

        jLabel7.setText("SELECT DATE");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(56, 56, 56)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pur)
                    .addComponent(jComboBox1, 0, 151, Short.MAX_VALUE))
                .addContainerGap(159, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(pur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(153, 204, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        jButton3.setText("CLEAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton6.setText("EXIT");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton4.setText("EDIT");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButton6))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton3))
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton6)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton2.setText("FINISH&VIEW");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        owed.setEditable(false);
        owed.setText("0.00");
        owed.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("TOTAL:");

        amt.setText("0.00");
        amt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("AMT PAID:");

        jButton1.setText("ADD ITEM");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel11))
                                .addGap(13, 13, 13)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(owed, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(amt, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton1))
                                .addGap(0, 2, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton2))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(46, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(owed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(amt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)
                        .addGap(15, 15, 15)
                        .addComponent(jButton2)
                        .addGap(33, 33, 33))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jDateChooser1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jDateChooser1MouseClicked
 //chosen=jDateChooser1.getDate();        // TODO add your handling code here:
 //System.out.println(chosen);
    }//GEN-LAST:event_jDateChooser1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
validater();       // TODO add your handling code here:
check();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void codActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codActionPerformed

    }//GEN-LAST:event_codActionPerformed

    private void codKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codKeyReleased
      jLabel8.setVisible(false);        // TODO add your handling code here:
      jButton5.setEnabled(false);
      jButton1.setEnabled(false);
      
search();  // TODO add your handling code here:
    }//GEN-LAST:event_codKeyReleased

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
cod.setText("");
             pri.setText("");
            jButton1.setEnabled(false);
            jLabel8.setVisible(false);        // TODO add your handling code here:
      jButton5.setEnabled(false);
                   pur.setText("");
             sub.setText("");
             itemnam.setText("");
             itemdes.setText("");
             pri.setText("");
             selling.setText("");
             quan.setText("");       // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void priKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priKeyReleased
       // TODO add your handling code here:
    }//GEN-LAST:event_priKeyReleased

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
y=JOptionPane.showConfirmDialog(jPanel1,"Do You want to save  " +amt.getText()+" As the Amount paid","Confirm!",JOptionPane.YES_NO_OPTION);
if(y==0)
{        try {
            //this.dispose(); 
            // TODO add your handling code here:
            save();
            inserter();
                    trunc();
                    trunc2();
                    insertholder();
                    insertholder2();
                    purchasejasper ma = new purchasejasper();
                            ma.initConnection();
                            ma.showReport();
                            this.dispose();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(purchases.class.getName()).log(Level.SEVERE, null, ex);
        }}

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
validat2();        // TODO add your handling code here:
jButton1.setEnabled(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void purActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purActionPerformed

    }//GEN-LAST:event_purActionPerformed

    private void purKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_purKeyReleased
searchcode();        // TODO add your handling code here:
String ss=(String)jComboBox1.getSelectedItem();
if(z==1){

JOptionPane.showMessageDialog(jPanel1, "Please Enter another invoice this already exists", "Warning!", JOptionPane.ERROR_MESSAGE);

pur.requestFocus();
z=0;
}        // TODO add your handling code here:
    }//GEN-LAST:event_purKeyReleased

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
purchaseedit n=new purchaseedit(new javax.swing.JFrame(),true);   
n.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments//
     */
    public void insert(){
        Calendar currentDate = Calendar.getInstance();
        
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
        Date aa=jDateChooser1.getDate();
        try{
             
           chosen= formatter.format(aa.getTime());
            
              System.out.println( chosen);
        }catch(Exception e){
       System.out.println(e); 


        }    
   
    try {
           
            String sql = ("INSERT INTO purchases values(?,?,?,?,?,?,?,?)");
             stmt = db.prepareStatement(sql);
           
                       
stmt.setString(1,(pur.getText()));
stmt.setString(2,(cod.getText()));
stmt.setString(3,(itemnam.getText()));
stmt.setString(4,(itemdes.getText()));

stmt.setString(7,((String)jComboBox1.getSelectedItem()));

stmt.setString(8,(chosen));
stmt.setString(5,(quan.getText()));
stmt.setString(6,(pri.getText()));
 int u = stmt.executeUpdate();


             if(u>0){
             
             System.out.println("successful");
             JOptionPane.showMessageDialog(null,"Thank you"," Successfully Saved!",JOptionPane.INFORMATION_MESSAGE);
             updateprice();
             cod.setText("");
             pri.setText("");
            jButton1.setEnabled(false);
                   // pur.setText("");
             sub.setText("");
             itemnam.setText("");
             itemdes.setText("");
             pri.setText("");
             selling.setText("");
             quan.setText("");
             jLabel8.setVisible(false); 
             z=0;
             y=0;
            // vat.setText("");            // reorder.setText("");
             }
             else{
                        
            
                JOptionPane.showMessageDialog(null,"Sorry, Not All Details Were Saved!","Error!",JOptionPane.ERROR_MESSAGE);
                z=0;
             
             }
           
        } catch (Exception exc) {  // process error
            exc.printStackTrace();
            System.out.println("process error" + exc);
                     //  JOptionPane.showMessageDialog(jPanel1,"Sorry, connection Failed!\nOpen Xampp And Set MySql Running","Error!",JOptionPane.ERROR_MESSAGE);
//System.exit(0);
        }
   
   
   }
    public void search(){
    try {
        String find=cod.getText();
           
            String sql = "SELECT * FROM stock where Itemcode='"+find+"'";
            stmt = db.prepareStatement(sql);
            ResultSet resultSet = stmt.executeQuery();
            while (resultSet.next()) {
                System.out.println("result");
               jLabel8.setVisible(true);
               jButton5.setEnabled(true);
               itemnam.setText(resultSet.getString(2));
               selling.setText(resultSet.getString(6));
                pri.setText(resultSet.getString(9));
               currentprice=resultSet.getString(9);
              itemdes.setText(resultSet.getString(3));
              jComboBox1.setSelectedItem(resultSet.getString("supplier"));
             }
            
        } catch (Exception exc) {  // process error
            System.out.println("process error" + exc);
                     //  JOptionPane.showMessageDialog(jPanel1,"Sorry, connection Failed!\nOpen Xampp And Set MySql Running","Error!",JOptionPane.ERROR_MESSAGE);
//System.exit(0);
        }
    
    
    
    
    }
    
    public void searchq(){
    try {
        String find=cod.getText();
        System.out.println(find);
           
            String sql = "SELECT * FROM stock where Itemcode='"+find+"'";
            stmt = db.prepareStatement(sql);
            ResultSet resultSet = stmt.executeQuery();
            while (resultSet.next()) {
                cquan=resultSet.getString("quantity");
                
               System.out.println(cquan+"result");
             }
            
        } catch (Exception exc) {  // process error
            exc.printStackTrace();
            System.out.println("process error" + exc);
                     //  JOptionPane.showMessageDialog(jPanel1,"Sorry, connection Failed!\nOpen Xampp And Set MySql Running","Error!",JOptionPane.ERROR_MESSAGE);
//System.exit(0);
        }
    
    
    
    
    }
    public void add(){
      double adder=Double.parseDouble(quan.getText());
      double before=Double.parseDouble(cquan);
      double both=adder+before;
      String finaltosave=String.valueOf(both);
      String thcode=cod.getText();
        
    try {
           
            String sql = ("update stock set quantity='"+finaltosave+"' where Itemcode='"+thcode+"'");
            stmt = db.prepareStatement(sql);
           
                       
int u = stmt.executeUpdate();
if(u>0){

System.out.println("done");

}
    }catch(Exception ex){ex.printStackTrace();}
    }
    public void validater(){
        double q=0;
        String dateTopay="";
        Calendar currentDate = Calendar.getInstance();
       
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
     
//      sad.format(ove);
        Date aa=jDateChooser1.getDate();
        try{
             
            dateTopay= formatter.format(aa.getTime());
              System.out.println( dateTopay);
        }catch(Exception e){
       System.out.println(e); 


        } 
     
        try{
        Date n=jDateChooser1.getDate();
        String choice=String.valueOf(n);
        }catch(Exception ex){
        JOptionPane.showMessageDialog(jPanel1, "Please select date", "Warning!", JOptionPane.ERROR_MESSAGE);
     jDateChooser1.requestFocus();
        
        }
        try{
        q=Double.parseDouble(quan.getText());
        
        }catch(NumberFormatException e){
        quan.setText("");
        quan.requestFocus();
        
        }
        try{
        double p=Double.parseDouble(pri.getText());
        
        }catch(NumberFormatException e){
        pri.setText("");
        pri.requestFocus();
        
        }
        try{
        double p=Double.parseDouble(amt.getText());
        
        }catch(NumberFormatException e){
        amt.setText("");
        amt.requestFocus();
        
        }
        searchcode();        // TODO add your handling code here:
String ss=(String)jComboBox1.getSelectedItem();
find();
if(z==1&& ss.equals(thsupplier)){

JOptionPane.showMessageDialog(jPanel1, "Please Enter another invoice this already exists", "Warning!", JOptionPane.ERROR_MESSAGE);


}
else if(y==1){
JOptionPane.showMessageDialog(jPanel1, "You Cannot Enter the same item twice", "Warning!", JOptionPane.ERROR_MESSAGE);
cod.requestFocus();

}
        
  else  if(dateTopay.equals("")){
  
  JOptionPane.showMessageDialog(jPanel1, "Select date ", "Unacceptable",JOptionPane.CANCEL_OPTION);
jDateChooser1.requestFocus();
  
  }
   else if(jComboBox1.getSelectedItem().equals("")){
    jComboBox1.requestFocus();
    JOptionPane.showMessageDialog(jPanel1, "Please select Supplier", "Warning!", JOptionPane.ERROR_MESSAGE);
    
    }
    else if(pur.getText().equals("")){
    pur.requestFocus();
    JOptionPane.showMessageDialog(jPanel1, "Please Enter invoice no.", "Warning!", JOptionPane.ERROR_MESSAGE);
    
    }
    else if(cod.getText().equals("")){
    cod.requestFocus();
    JOptionPane.showMessageDialog(jPanel1, "Please Enter item code", "Warning!", JOptionPane.ERROR_MESSAGE);
    
    }
    
    
    else if(quan.getText().equals("")&& q<=0){
    quan.requestFocus();
    JOptionPane.showMessageDialog(jPanel1, "Please Enter quantity", "Warning!", JOptionPane.ERROR_MESSAGE);
    
    }
    else if(pri.getText().equals("")){
    pri.requestFocus();
    JOptionPane.showMessageDialog(jPanel1, "Please Enter price", "Warning!", JOptionPane.ERROR_MESSAGE);
    
    }
    else if(amt.getText().equals("")){
    amt.requestFocus();
    JOptionPane.showMessageDialog(jPanel1, "Please Enter Amount paid", "Warning!", JOptionPane.ERROR_MESSAGE);
    
    }
    else{
        searchq();
add();
additems();
insert();
update();
jButton2.setEnabled(true);
         } 
    }
    public void validat2(){
    
    
       String dateTopay="";
        Calendar currentDate = Calendar.getInstance();
       
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
     
//      sad.format(ove);
        Date aa=jDateChooser1.getDate();
        try{
             
            dateTopay= formatter.format(aa.getTime());
            
              System.out.println( dateTopay);
        }catch(Exception e){
       System.out.println(e); 


        } 
     
        try{
        Date n=jDateChooser1.getDate();
        String choice=String.valueOf(n);
        }catch(Exception ex){
        JOptionPane.showMessageDialog(jPanel1, "Please select date", "Warning!", JOptionPane.ERROR_MESSAGE);
     jDateChooser1.requestFocus();
        
        }
        try{
        double q=Double.parseDouble(quan.getText());
        
        }catch(NumberFormatException e){
        quan.setText("");
        quan.requestFocus();
        
        }
        try{
        double q=Double.parseDouble(pri.getText());
        
        }catch(NumberFormatException e){
        pri.setText("");
        pri.requestFocus();
        
        }
        try{
        double q=Double.parseDouble(amt.getText());
        
        }catch(NumberFormatException e){
        amt.setText("");
        amt.requestFocus();
        
        }
        
    if(dateTopay.equals("")){
  
  JOptionPane.showMessageDialog(jPanel1, "Select date ", "Unacceptable",JOptionPane.CANCEL_OPTION);
jDateChooser1.requestFocus();
  
  }
   else if(jComboBox1.getSelectedItem().equals("")){
    jComboBox1.requestFocus();
    JOptionPane.showMessageDialog(jPanel1, "Please select Supplier", "Warning!", JOptionPane.ERROR_MESSAGE);
    
    }
    else if(pur.getText().equals("")){
    pur.requestFocus();
    JOptionPane.showMessageDialog(jPanel1, "Please Enter invoice no.", "Warning!", JOptionPane.ERROR_MESSAGE);
    
    }
    else if(cod.getText().equals("")){
    cod.requestFocus();
    JOptionPane.showMessageDialog(jPanel1, "Please Enter item code", "Warning!", JOptionPane.ERROR_MESSAGE);
    
    }
    
    
    else if(quan.getText().equals("")){
    quan.requestFocus();
    JOptionPane.showMessageDialog(jPanel1, "Please Enter quantity", "Warning!", JOptionPane.ERROR_MESSAGE);
    
    }
    
    else if(pri.getText().equals("")){
    pri.requestFocus();
    JOptionPane.showMessageDialog(jPanel1, "Please Enter price", "Warning!", JOptionPane.ERROR_MESSAGE);
    
    }
   
    else if(amt.getText().equals("")){
    amt.requestFocus();
    JOptionPane.showMessageDialog(jPanel1, "Please Enter Amount paid", "Warning!", JOptionPane.ERROR_MESSAGE);
    
    }
    else{
       calc();
       
         }
    
    }
    public void update(){
        String amtpaid=null;
        String amtowed=null;
    String inv=pur.getText();
    String sup=(String)jComboBox1.getSelectedItem();
    int i=0;
    
    try {
            String sql = "SELECT * FROM purchasedpaid WHERE invoiceno='"+inv+"' && supplier='"+sup+"'";
            stmt = db.prepareStatement(sql);
            ResultSet resultSet = stmt.executeQuery();
            while (resultSet.next()) {
                
                System.out.println("result for update");
               i=1;
              amtpaid=resultSet.getString(4);
              amtowed=resultSet.getString(3);
              }
            
        } catch (Exception exc) {  // process error
            System.out.println("process error" + exc);
        }  
    
    if(i==1){
    try {
        String owedamt=owed.getText();
        String paid=amt.getText();
           
            String sql = ("update purchasedpaid set amtowed='"+owedamt+"',amtpaid='"+paid+"' where invoiceno='"+inv+"' && supplier='"+sup+"'");
            stmt = db.prepareStatement(sql);
           
                       
int u = stmt.executeUpdate();
if(u>0){

System.out.println("done2");

}
    }catch(Exception ex){ex.printStackTrace();ex.printStackTrace();}
    }
    
    else if(i==0){
            try {
                
            try {
                   
                    String sql = ("INSERT INTO purchasedpaid values(?,?,?,?,?)");
                    stmt = db.prepareStatement(sql);
                   
                               
        stmt.setString(1,(pur.getText()));
        stmt.setString(3,(owed.getText()));
        stmt.setString(2,((String)jComboBox1.getSelectedItem()));
        stmt.setString(4,(amt.getText()));
        stmt.setString(5,chosen);
            
            int y=stmt.executeUpdate();
            }catch(Exception ex){
            ex.printStackTrace();
            
            }
         
            stmt.close();
            } catch (SQLException ex) {
                Logger.getLogger(purchases.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    
    
    
    }
    public void calc(){
        
    double theprice=Double.parseDouble(pri.getText());
     double thequan=Double.parseDouble(quan.getText());
///     double thevat=Double.parseDouble(vat.getText());
     double finalv=(theprice*thequan);
    
     BigDecimal bd = new BigDecimal(finalv);
        bd = bd.setScale(2, BigDecimal.ROUND_HALF_UP);
        
     sub.setText(String.valueOf(bd));
   // owed.setText(String.valueOf(bd));
     
    
    }
    public void additems(){
    
    double aa=Double.parseDouble(owed.getText());
    double bb=Double.parseDouble(sub.getText());
    double dis=aa+bb;
    BigDecimal bd = new BigDecimal(dis);
        bd = bd.setScale(2, BigDecimal.ROUND_HALF_UP);
        
    
    owed.setText(String.valueOf(bd));
    
    
    }
    public void check(){
    double aa=0;
    try{
    
     aa=Double.parseDouble(owed.getText());
    
    
    
    }catch(NumberFormatException ex){
    
    aa=0;}
    if(aa==0){
    
   // jButton2.setEnabled(true);
    
    }
    
    
    }
    public void trunc(){
        
     try {
            //String jj = id.getText();
            
            String sql = "truncate table purchaseholder";
            stmt = db.prepareStatement(sql);


            int s = stmt.executeUpdate();
         //   stmt.close();
          //  connection.close();
        } catch (Exception ex) {
            System.out.println("Found some error : " + ex);
            JOptionPane.showMessageDialog(null, "Error " + ex + "", "Error!", JOptionPane.ERROR_MESSAGE);


        }
    
    
    }
    public void trunc2(){
    
    
     try {
            //String jj = id.getText();
            
            String sql = "truncate table purchasedpaidholder";
            stmt = db.prepareStatement(sql);


            int s = stmt.executeUpdate();
         //   stmt.close();
          //  connection.close();
        } catch (Exception ex) {
            System.out.println("Found some error : " + ex);
            JOptionPane.showMessageDialog(null, "Error " + ex + "", "Error!", JOptionPane.ERROR_MESSAGE);


        }
    }
    public void insertholder(){
        
    
    String sd=pur.getText();
    String dd=(String)jComboBox1.getSelectedItem();
    try {

            stmt = db.prepareStatement("INSERT INTO purchaseholder(invoiceno,supplier,Itemcode,name,description,quantity,price,date) select code,supplier,itemcode,name,description,quantity,price,date from purchases where code='"+sd+"' && supplier='"+dd+"'");





            int s = stmt.executeUpdate();
           // psmnt.close();

        } catch (Exception ex) {
            System.out.println("Found some error : " + ex);
            JOptionPane.showMessageDialog(null, "Error " + ex + "", "Error!", JOptionPane.ERROR_MESSAGE);

        }
    
    
    }
    public void insertholder2(){
    
    try {

            
            stmt = db.prepareStatement("INSERT INTO purchasedpaidholder values(?,?,?,?,?)");
            
            
            
            stmt.setString(2, owed.getText());
             stmt.setString(1, amt.getText());
              stmt.setString(3, chosen);
             stmt.setString(5, pur.getText());
              stmt.setString(4, (String)jComboBox1.getSelectedItem());
                   int s = stmt.executeUpdate();
           // psmnt.close();

        } catch (Exception ex) {
            System.out.println("Found some error : " + ex);
            JOptionPane.showMessageDialog(null, "Error 2222" + ex + "", "Error!", JOptionPane.ERROR_MESSAGE);

        }
    
    
    
    
    }
    public void save(){
        String tosave=amt.getText();
        String tinvoice=pur.getText();
        String thsup=(String)jComboBox1.getSelectedItem();
        
    
     try {
          
            String sql = ("update purchasedpaid set amtpaid='"+tosave+"' where invoiceno='"+tinvoice+"' && supplier='"+thsup+"'");
            stmt = db.prepareStatement(sql);
           
                       
int u = stmt.executeUpdate();
     }catch(Exception ex){
     
     ex.printStackTrace();
     }
    
    
    
    }
    public void updateprice(){
        
        
        
        String theprice=pri.getText();
        
        if(theprice.equals(currentprice)){}
        else
        {        String tosave=amt.getText();
        String code=cod.getText();
        String thsup=(String)jComboBox1.getSelectedItem();
        
    
     try {
           
            String sql = ("update stock set buyingprice='"+theprice+"' where itemcode='"+code+"'");
            stmt = db.prepareStatement(sql);
           
                       
int u = stmt.executeUpdate();
     }catch(Exception ex){
     
     ex.printStackTrace();
     }
    
        }
    
    }
    public void searchcode(){
    
    String checkcode=pur.getText();
    String supp=(String)jComboBox1.getSelectedItem();
    try {
            String sql = "SELECT * FROM purchases where code='"+checkcode+"'&& supplier='"+supp+"'";
             stmt = db.prepareStatement(sql);
            ResultSet resultSet = stmt.executeQuery();
            while (resultSet.next()) {
               z=1;
               //thsupplier=resultSet.getString(2);
             }
            
        } catch (Exception exc) {  // process error
            System.out.println("process error" + exc);
                     //  JOptionPane.showMessageDialog(jPanel1,"Sorry, connection Failed!\nOpen Xampp And Set MySql Running","Error!",JOptionPane.ERROR_MESSAGE);
//System.exit(0);
        }
    
    }
    public void find(){
        String items=cod.getText();
    String checkcode=pur.getText();
    String supp=(String)jComboBox1.getSelectedItem();
    try {
            String sql = "SELECT * FROM purchases where code='"+checkcode+"'&& supplier='"+supp+"'&& itemcode='"+items+"'";
            stmt = db.prepareStatement(sql);
            ResultSet resultSet = stmt.executeQuery();
            while (resultSet.next()) {
               y=1;
               //thsupplier=resultSet.getString(2);
             }
            
        } catch (Exception exc) {  // process error
            System.out.println("process error" + exc);
                     //  JOptionPane.showMessageDialog(jPanel1,"Sorry, connection Failed!\nOpen Xampp And Set MySql Running","Error!",JOptionPane.ERROR_MESSAGE);
//System.exit(0);
        }
    
    
    
    
    
    
    }
    public void inserter(){
    
    try {

            
            stmt = db.prepareStatement("INSERT INTO trancpurchases values(?,?,?,?)");
            
            
                     
                               
        stmt.setString(1,(pur.getText()));
        stmt.setString(2,(amt.getText()));
        stmt.setString(3,((String)jComboBox1.getSelectedItem()));
        
        stmt.setString(4,chosen);
                   int s = stmt.executeUpdate();
           // psmnt.close();

        } catch (Exception ex) {
            System.out.println("Found some error : " + ex);
            JOptionPane.showMessageDialog(null, "Error 2222" + ex + "", "Error!", JOptionPane.ERROR_MESSAGE);

        }
    
    
    
    }
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(purchases.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(purchases.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(purchases.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(purchases.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                purchases dialog = new purchases(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amt;
    private javax.swing.JTextField cod;
    private javax.swing.JTextField itemdes;
    private javax.swing.JTextField itemnam;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTextField owed;
    private javax.swing.JTextField pri;
    private javax.swing.JTextField pur;
    private javax.swing.JTextField quan;
    private javax.swing.JTextField selling;
    private javax.swing.JTextField sub;
    // End of variables declaration//GEN-END:variables
}
